name: CI

on:
  push:
    branches: [ main, next ]
  pull_request:
    branches: [ main, next ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: feathers
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      mongodb:
        image: mongo:7
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.11.0
      
      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Setup better-sqlite3 bindings
        run: |
          # Install build dependencies
          sudo apt-get update && sudo apt-get install -y python3 make g++ 
          
          # Force rebuild better-sqlite3 using pnpm
          pnpm rebuild better-sqlite3
          
          # Find and display where bindings were built
          echo "=== Looking for better_sqlite3.node files ==="
          find node_modules -name "better_sqlite3.node" -type f 2>/dev/null || true
          
          # Verify the binding exists and is accessible
          BINDING=$(find node_modules -name "better_sqlite3.node" -type f 2>/dev/null | head -1)
          if [ -n "$BINDING" ]; then
            echo "Found binding at: $BINDING"
            echo "Binding file size: $(stat -c%s "$BINDING") bytes"
            echo "Binding permissions: $(stat -c%a "$BINDING")"
          else
            echo "ERROR: No better_sqlite3.node binding found after rebuild"
            exit 1
          fi
      
      - name: Build packages
        run: pnpm run compile
      
      - name: Run linter
        run: pnpm run lint
      
      - name: Run tests
        run: |
          # Run tests for all packages
          pnpm --filter=@wingshq/adapter-commons test
          pnpm --filter=@wingshq/adapter-tests test  
          pnpm --filter=@wingshq/memory test
          pnpm --filter=@wingshq/knex test
          pnpm --filter=@wingshq/mongodb test
          pnpm --filter=@wingshq/db0 test
          pnpm --filter=@wingshq/kysely test
        env:
          CI: true
          TEST_DB: postgres
          NODE_OPTIONS: --experimental-vm-modules
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          fail_ci_if_error: false
          verbose: true
